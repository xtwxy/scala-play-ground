# https://www.playframework.com/documentation/latest/Configuration

play {
  http {
    secret {
      key = "wangxy"
      key = ${?APPLICATION_SECRET}
    }
  }
  filters {
    hosts {
      allowed = ["localhost", "192.168.0.78"]
    }
    headers {
      frameOptions = null
      xssProtection = null
      contentTypeOptions = null
      permittedCrossDomainPolicies = null
      contentSecurityPolicy = null
    }
  }
  server {
    http {
      port = 9000
    }
  }
  akka {
    actor-system = "ecommerce"
  }
}

akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "INFO"
  log-config-on-start = off
  log-dead-letters = 0
  log-dead-letters-during-shutdown = off

  actor {
    provider = "akka.cluster.ClusterActorRefProvider"
    passivate-timeout = 6 seconds
    number-of-shards = 100

    serialization-bindings {
      "java.io.Serializable" = none
      "scalapb.GeneratedMessage" = ecommerce-protobuf
    }
  }

  alarm {
    eval-period = 5 seconds
  }

  remote {
    log-remote-lifecycle-events = off
    artery.untrusted-mode = off
    log-sent-messages = off

    netty.tcp {
      hostname = "192.168.0.78"
      port = 2553
      hostname = ${?HOSTNAME}
      port = ${?PORT}
    }
  }

  cluster {
    sharding {
      remember-entities = on
    }
    seed-nodes = [
      "akka.tcp://ecommerce@192.168.0.78:2553"
    ]
  }

  persistence {
    journal {
      plugin = "cassandra-journal"
    }
    snapshot-store {
      plugin = "cassandra-snapshot-store"
    }
  }

  extensions = ["akka.cluster.pubsub.DistributedPubSub"]
}

cassandra-journal {
  class = "akka.persistence.cassandra.journal.CassandraJournal"
  contact-points = ["192.168.0.78"]
  port = 9042
  cluster-id = "mstar-cluster"
  keyspace = "ecommerce_journal"
}

cassandra-snapshot-store {
  class = "akka.persistence.cassandra.snapshot.CassandraSnapshotStore"
  contact-points = ["192.168.0.78"]
  port = 9042
  cluster-id = "mstar-cluster"
  keyspace = "ecommerce_snapshot"
}

