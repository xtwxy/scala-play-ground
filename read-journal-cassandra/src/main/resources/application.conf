akka {
  log-dead-letters = off
  log-dead-letters-during-shutdown = off

  actor {
    provider = "akka.cluster.ClusterActorRefProvider"
    serializers {
      protobuf = "akka.remote.serialization.ProtobufSerializer"
    }
    serialization-bindings {
      "java.io.Serializable" = none
      "scalapb.GeneratedMessage" = protobuf
    }
  }

  remote {
    netty.tcp {
      hostname = "192.168.0.78" // default to the first seed node
      port = 2553               // default port
      hostname = ${?HOSTNAME}   // override with -DHOSTNAME
      port = ${?PORT}           // override with -DPORT
    }
  }

  cluster {
    seed-nodes = [
      "akka.tcp://system@192.168.0.78:2553",
    ]

    # Settings for the DistributedPubSub extension
    pub-sub {
      # Actor name of the mediator actor, /system/distributedPubSubMediator
      name = distributedPubSubMediator

      # Start the mediator on members tagged with this role.
      # All members are used if undefined or empty.
      # role = ""

      # The routing logic to use for 'Send'
      # Possible values: random, round-robin, broadcast
      routing-logic = random

      # How often the DistributedPubSubMediator should send out gossip information
      # gossip-interval = 1s

      # Removed entries are pruned after this duration
      removed-time-to-live = 120s

      # Maximum number of elements to transfer in one message when synchronizing the registries.
      # Next chunk will be transferred in next round of gossip.
      # max-delta-elements = 3000

      # When a message is published to a topic with no subscribers send it to the dead letters.
      send-to-dead-letters-when-no-subscribers = on

      # The id of the dispatcher to use for DistributedPubSubMediator actors.
      # If not specified default dispatcher is used.
      # If specified you need to define the settings of the actual dispatcher.
      # use-dispatcher = ""
    }
  }

  persistence {
    journal {
      plugin = "cassandra-journal"
    }
    snapshot-store {
      plugin = "cassandra-snapshot-store"
    }
  }

  extensions = ["akka.cluster.pubsub.DistributedPubSub"]
}

cassandra-journal {
  class = "akka.persistence.cassandra.journal.CassandraJournal"
  contact-points = ["192.168.0.78"]
  port = 9042
  cluster-id = "dcim-cluster"
  keyspace = "dcim_journal"
}

cassandra-snapshot-store {
  class = "akka.persistence.cassandra.snapshot.CassandraSnapshotStore"
  contact-points = ["192.168.0.78"]
  port = 9042
  cluster-id = "dcim-cluster"
  keyspace = "dcim_snapshot"
}
